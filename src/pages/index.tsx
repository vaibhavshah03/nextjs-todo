import Head from "next/head";
import { useState } from "react";

type ITodo = {
  id: string;
  text: string;
  completed: Boolean;
};

export default function Home() {
  //1. create state
  const [todo, setTodo] = useState<ITodo[]>([]);

  const [todoText, setTodoText] = useState("");
  //2. create handler for adding todo
  const handleAddTodo = () => {
    // create obj

    const data = todo.find(
      (item) => item.text.toLowerCase() === todoText.toLowerCase()
    );

    if (!data) {
      setTodo((prev) => [
        ...prev,
        { id: new Date().toISOString(), text: todoText, completed: false },
      ]);
      setTodoText("");
    } else {
      window.alert("Todo Added already!");
    }
  };

  const handleUpdateTodoText = (e: React.ChangeEvent<HTMLInputElement>) => {
    setTodoText(e.target.value);
  };

  const handleToggle = (id: string) => {
    setTodo((prev) =>
      prev.map((todo) =>
        todo.id === id ? { ...todo, completed: !todo.completed } : todo
      )
    );
  };
  const removeTodo = (id: string) => {
    setTodo((prev) => prev.filter((todo) => todo.id !== id));
  };

  return (
    <>
      <Head>
        <title>Todo App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div>
          <h1 className="font-bold font-serif flex justify-center items-center">
            Todo App
          </h1>
        </div>
      </main>
      <div className="flex flex-col box-border justify-center w-30 h-30">
        <div className="flex flex-row px-4 h-30 w-full justify-center items-center box-border-10px shadow-md ">
          <label className="h-10 flex">Enter Your Todo</label>
          <input
            className="border-x-black flex pl-10px"
            type="search"
            value={todoText}
            onChange={handleUpdateTodoText}
            placeholder="Type Here!"
          />
          <button
            className="rounded-full w-20 h-10 bg-slate-600 text-white "
            disabled={!todoText}
            onClick={handleAddTodo}
          >
            ADD
          </button>
        </div>
        <p className="flex justify-center">My Todo's</p>
        <div className="flex flex-row space-x-4">
          <input type="search" />
        </div>
        <ul>
          {todo.map((item) => (
            <div
              key={item.id}
              onClick={() => handleToggle(item.id)}
              className="flex flex-row items-center space-x-4 justify-center"
            >
              <span className="font-semibold m-2">{item.text}</span>
              <button
                className="p-2 border rounded-full text-white bg-slate-600 w-10"
                onClick={() => removeTodo(item.id)}
              >
                X
              </button>
            </div>
          ))}
        </ul>
        <br></br>
        <div></div>
      </div>
    </>
  );
}
